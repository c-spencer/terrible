(ns "trbl/core")

(jsmacro "@" [{walker :walker scope :scope} form]
  (let [walker (walker scope)
        form (walker form)]
    (set! form.$explode true)
    form))

(jsmacro "new" [{walker :walker scope :scope JS :JS} callee & args]
  (let [walker (walker scope)]
    (JS.NewExpression (walker callee) (amap walker args))))

(jsmacro "apply" [{walker :walker scope :scope JS :JS} callee args]
  (let [walker (walker scope)]
    (JS.CallExpression (JS.MemberExpression (walker callee)
                                            (JS.Identifier "apply"))
                       [(JS.Literal nil) (walker args)])))

(jsmacro "jsmacro" []
  (console.log "User space jsmacros are not allowed."))

(new A)

(def defmacro
  (macro [name & body]
    `(def ~name (macro ~@body))))

(defmacro defn [name bindings & body]
  `(def ~name (fn ~bindings ~@body)))

(defn + [left & args]
  (for [right args]
    (set! left (+ left right)))
  left)

(+ 1 2)

(apply + [1 2 3])
